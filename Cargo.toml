[package]
name = "rsk-simulation"
version = "0.1.0"
edition = "2021"

[features]

control = []
native_control = [
    "control",
    "json",
    "dep:zeromq",
    "dep:tokio"
]

serde = ["dep:serde", "rapier2d-f64/serde-serialize"]
json = ["serde", "dep:serde_json"]
bitcode = ["serde", "dep:bitcode"]
wasm_server_runner = [
    "dep:anyhow",
    "dep:tracing-subscriber",
    "dep:wasm-bindgen-cli-support",
    "dep:axum",
    "dep:axum-extra",
    "dep:axum-server",
    "dep:axum-server-dual-protocol",
    "dep:directories",
    "dep:tokio",
    "dep:tower-http",
    "dep:http",
    "dep:tower",
    "dep:fastrand",
    "dep:rcgen"
]
native_gui = ["dep:bevy"]
simulation = ["dep:rapier2d-f64"]
referee = ["simulation"]
native_gc = [
    "simulation",
    "referee"
]

# server: simu + gc + control / client: gui
# alternative_http = []
# alternative_http_server = ["standard_control", "standard_gc", "http_server_gui"]
# alternative_http_client = ["http_client_gc", "bevy_gui"]

# server: control / client: simu + gc + gui
# default_http = []
# default_http_server = ["http_server"]
# default_http_client = ["http_client_control", "standard_gc", "bevy_gui"]

native = [
    "native_control",
    "json",
    "native_gui",
    "native_gc",
    "rapier2d-f64/simd-stable",
    "dep:tracing-subscriber"
]

alternative_http_client = [
    "native_gui",
    "dep:wasm-sockets",
    "dep:wasm-bindgen-futures",
    "dep:futures",
    "dep:gloo-timers",
    "bitcode"
]
alternative_http_server = [
    "bitcode",
    "dep:tokio-tungstenite",
    "wasm_server_runner",
    "dep:websocket",
    "native_gc",
    "dep:tokio"
]

http_client = [
    "control",
    "native_gc",
    "json",
    "bitcode",
    "dep:wasm-sockets",
    "dep:url",
    "dep:rand",
    "getrandom/js",
    "native_gui",
    "simulation",
    "referee"
]
http_server = [
    "wasm_server_runner",
    "control",
    "dep:tokio",
    "json",
    "bitcode",
    "dep:tokio-tungstenite",
    "dep:dashmap",
    "dep:futures-util",

    # zeromq
    "dep:thiserror",
    "dep:futures-channel",
    "dep:futures-io",
    "dep:futures-task",
    "dep:futures-util",
    "dep:async-trait",
    "dep:parking_lot",
    "dep:rand",
    "dep:bytes",
    "dep:tokio",
    "dep:tokio-util",
    "dep:num-traits",
    "dep:dashmap",
    "dep:crossbeam-queue",
    "dep:uuid",
    "dep:regex",
    "dep:once_cell",
    "dep:log",
    "dep:asynchronous-codec"
]

default = ["http_server"]

[dependencies]
tracing = "0.1"
rand = { version = "0.8", optional = true }
getrandom = { version = "0.2.15", optional = true }
url = { version = "2.5", optional = true }
futures-util = { version = "0.3", features = ["sink"], optional = true }
websocket = { version = "0.27", optional = true }

nalgebra = { version = "0.33", features = ["convert-glam025"]}
rapier2d-f64 = { version = "0.22", features = ["simd-stable"], optional = true }

bevy = { version = "0.14.2", default-features = false, features = [
    "jpeg","bevy_asset","bevy_core_pipeline","bevy_render","bevy_sprite","bevy_winit","multi_threaded","webgl2","x11","wayland"
], optional = true }

# serde
serde = { version = "1.0", features = ["derive"], optional = true }
serde_json = { version = "1.0", optional = true }
bitcode = { version = "0.6", features = ["serde"], optional = true }


[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
zeromq = { version = "0.4", optional = true }
tokio-tungstenite = { version = "0.24", optional = true }

# wasm-server-runner
anyhow = { version = "1.0", optional = true }
tracing-subscriber = { version = "0.3", features = ["env-filter"], optional = true }
wasm-bindgen-cli-support = { version = "0.2", optional = true }
axum = { version = "0.7", default-features = false, features = ["http1", "ws"], optional = true }
axum-extra = { version = "0.9", features = [], optional = true }
axum-server = { version = "0.7.1", features = ["tls-rustls"], optional = true }
axum-server-dual-protocol = { version = "0.7", optional = true }
directories = { version = "5", optional = true }
tower-http = { version = "0.6.1", features = ["compression-full", "fs", "set-header", "trace"], optional = true }
tokio = { version = "1.37", default-features = false, features = ["full"], optional = true }
http = { version = "1.1", optional = true }
tower = { version = "0.5.1", optional = true }
fastrand = { version = "2.0", optional = true }
rcgen = { version = "0.12", default-features = false, features = ["ring"], optional = true }

# zeromq (https://github.com/zeromq/zmq.rs)
thiserror = { version = "1", optional = true }
futures-channel = { version = "0.3", features = ["sink"], optional = true }
futures-io = { version = "0.3", optional = true }
futures-task = { version = "0.3", optional = true }
# futures-util = { version = "0.3", features = ["sink"] }
async-trait = { version = "0.1", optional = true }
parking_lot = { version = "0.12", optional = true }
# rand = "0.8"
bytes = { version = "1", optional = true }
# tokio = { version = "1", features = ["full"], optional = true }
tokio-util = { version = "0.7", features = ["compat"], optional = true }
num-traits = { version = "0.2", optional = true }
dashmap = { version = "6", optional = true }
crossbeam-queue = { version = "0.3", optional = true }
uuid = { version = "1", features = ["v4"], optional = true }
regex = { version = "1", default-features = false, features = ["std", "unicode-perl"], optional = true }
once_cell = { version = "1", optional = true }
log = { version = "0.4", optional = true }
asynchronous-codec = { version = "0.7", optional = true }


[target.'cfg(target_arch = "wasm32")'.dependencies]
log = "0.4"
console_log = "1.0"
wasm_thread = "0.3"
console_error_panic_hook = "0.1"
tracing-wasm = "0.2"
web-sys = { version = "0.3", features = ["Location", "Window"] }
wasm-timer = "0.2"
wasm-sockets = { version = "1.0", optional = true }
futures = { version = "0.3", optional = true }
wasm-bindgen-futures = { version = "0.4", optional = true }
gloo-timers = { version = "0.3", features = ["futures"], optional = true }

[build-dependencies]
cfg_aliases = "0.2"

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3
